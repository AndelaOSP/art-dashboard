default: &default
  docker:
    - image: circleci/node:8.9.0
  working_directory: ~/art-dashboard  
restore_cache: &restore_cache
  restore_cache:
    key: dependency-cache-{{ checksum "package.json" }}
install_dependencies: &install_dependencies  
  run:
    name: install dependencies
    command: yarn install
save_cache: &save_cache 
  save_cache:
    key: dependency-cache-{{ checksum "package.json" }}
    paths:
      - ./node_modules   

version: 2
jobs:
  build:
    <<: *default
    steps:
      - checkout
      - *restore_cache
      - *install_dependencies
      - *save_cache 
  tests:
    <<: *default
    steps:
      - checkout
      - *restore_cache
      - *install_dependencies
      - *save_cache
      - run:
          name: run tests
          command: yarn  coverage
      - run:
          name: submit coverage results
          command: yarn  coveralls
  deploy_staging:
    <<: *default
    steps:
      - checkout 
      - setup_remote_docker:
          version: 17.11.0-ce
      - *restore_cache
      - *install_dependencies
      - *save_cache    
      - run:
          name: deploying application to staging 
          command: |
            bash script/deploy.sh
  deploy_production:
    <<: *default
    steps:
      - checkout 
      - setup_remote_docker:
          version: 17.11.0-ce
      - *restore_cache
      - *install_dependencies
      - *save_cache        
      - run:
          name: deploying application to production 
          command: |
            bash script/deploy.sh
  release_notes:
    <<: *default
    steps:
      - add_ssh_keys
      - checkout
      - run:
          name: release notes
          command: |
            git config user.email "${GIT_EMAIL}"
            git config user.name "${GIT_USER}"
            bash script/release.sh
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build
      - tests:
          requires:
            - build
      - deploy_staging:
          requires:
            - tests 
          filters:
            branches:
              only: develop
      - deploy_production:
          requires:
            - tests 
          filters:
            branches:
              only: master
      - release_notes:
          requires:
            - deploy_production
